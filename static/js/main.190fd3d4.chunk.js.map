{"version":3,"sources":["components/Registrations.js","components/Header.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Registrations","this","props","name","role","class","Component","Header","companyName","href","type","placeholder","aria-label","Sidebar","data-feather","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iNA2DeA,E,uKAvDMC,KAAKC,MAAdC,KACR,OACE,0BAAMC,KAAK,OAAOC,MAAM,sCACtB,yBAAKA,MAAM,2GACT,8BAEF,oDACA,yBAAKA,MAAM,oBACT,2BAAOA,MAAM,gCACX,+BACE,4BACE,sCACA,0CACA,0CACA,gDACA,yCAGJ,+BACE,4BACE,oCACA,qCACA,qCACA,2CACA,qCAEF,4BACE,oCACA,qCACA,qCACA,2CACA,qCAEF,4BACE,oCACA,qCACA,qCACA,2CACA,qCAEF,4BACE,oCACA,qCACA,qCACA,2CACA,6C,GA/CYC,aCyBbC,EAzBA,SAACL,GAAW,IACjBM,EAAgBN,EAAhBM,YAER,OACE,yBAAKH,MAAM,kEACT,uBAAGA,MAAM,sCAAsCI,KAAK,KACjDD,GAEH,2BACEH,MAAM,uCACNK,KAAK,OACLC,YAAY,SACZC,aAAW,WAEb,wBAAIP,MAAM,mBACR,wBAAIA,MAAM,wBACR,uBAAGA,MAAM,WAAWI,KAAK,KAAzB,gBCmBKI,MAnCf,WACE,OACE,yBAAKR,MAAM,+CACT,yBAAKA,MAAM,kBACT,wBAAIA,MAAM,mBACR,wBAAIA,MAAM,YACR,uBAAGA,MAAM,kBAAkBI,KAAK,KAC9B,0BAAMK,eAAa,SADrB,aAEY,0BAAMT,MAAM,WAAZ,eAGd,wBAAIA,MAAM,YACR,uBAAGA,MAAM,WAAWI,KAAK,KACvB,0BAAMK,eAAa,SADrB,eAKF,wBAAIT,MAAM,YACR,uBAAGA,MAAM,WAAWI,KAAK,KACvB,0BAAMK,eAAa,SADrB,iBAKF,wBAAIT,MAAM,YACR,uBAAGA,MAAM,WAAWI,KAAK,KACvB,0BAAMK,eAAa,SADrB,6B,MCPGC,MAZf,WACE,OACE,yBAAKV,MAAM,mBACT,kBAAC,EAAD,CAAQG,YAAY,0BACpB,yBAAKH,MAAM,OACT,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDYW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.190fd3d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Registrations extends Component {\r\n  render() {\r\n    const { name } = this.props;\r\n    return (\r\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n          <h3></h3>\r\n        </div>\r\n        <h3>Marriages Registered</h3>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Reg ID</th>\r\n                <th>Groom Name</th>\r\n                <th>Bride Name</th>\r\n                <th>Date of Marriage</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>1010</td>\r\n                <td>Peter</td>\r\n                <td>Lorra</td>\r\n                <td>10-Aug-2020</td>\r\n                <td>View</td>\r\n              </tr>\r\n              <tr>\r\n                <td>1010</td>\r\n                <td>Peter</td>\r\n                <td>Lorra</td>\r\n                <td>10-Aug-2020</td>\r\n                <td>View</td>\r\n              </tr>\r\n              <tr>\r\n                <td>1010</td>\r\n                <td>Peter</td>\r\n                <td>Lorra</td>\r\n                <td>10-Aug-2020</td>\r\n                <td>View</td>\r\n              </tr>\r\n              <tr>\r\n                <td>1010</td>\r\n                <td>Peter</td>\r\n                <td>Lorra</td>\r\n                <td>10-Aug-2020</td>\r\n                <td>View</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registrations;\r\n","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const { companyName } = props;\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n      <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">\r\n        {companyName}\r\n      </a>\r\n      <input\r\n        class=\"form-control form-control-dark w-100\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n      ></input>\r\n      <ul class=\"navbar-nav px-3\">\r\n        <li class=\"nav-item text-nowrap\">\r\n          <a class=\"nav-link\" href=\"#\">\r\n            Sign out\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n      <div class=\"sidebar-sticky\">\r\n        <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" href=\"#\">\r\n              <span data-feather=\"home\"></span>\r\n              Dashboard <span class=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">\r\n              <span data-feather=\"file\"></span>\r\n              Registered\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">\r\n              <span data-feather=\"file\"></span>\r\n              View Pending\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">\r\n              <span data-feather=\"file\"></span>\r\n              Download Certificate\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\nimport Registrations from './components/Registrations';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div class=\"container-fluid\">\n      <Header companyName=\"Marriage Registration\" />\n      <div class=\"row\">\n        <Sidebar />\n        <Registrations />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}